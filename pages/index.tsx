import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useMutation } from '../convex/_generated/react'
import styles from '../styles/Home.module.css'
import { Button, FormGroup, Label, Input, Form, Alert, Breadcrumb, BreadcrumbItem, Collapse,
  Navbar,
  NavbarToggler,
  NavbarBrand,
  Nav,
  NavItem,
  NavLink,
  UncontrolledDropdown,
  DropdownToggle,
  DropdownMenu,
  DropdownItem,
  NavbarText } from "reactstrap"
import Layout from "../components/Layout";
import { useState } from 'react'
import Link from 'next/link'
import createRace from '../convex/createRace'
import { useRouter } from 'next/router'

const Home: NextPage = () => {
  const addText = useMutation('createText');
  const [newText, setNewText] = useState('');
  const [textSubmissionAlert, setTextSubmissionAlert] = useState(false);

  const createRace = useMutation('createRace');
  const router = useRouter();

  const [isOpen, setIsOpen] = useState(false);

  const toggle = () => setIsOpen(!isOpen);

  return (
    <div className={styles.container}>
      <Head>
        <title>Tug of War Typeracer | LMHS Coding Club</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to LMHS Coding Club's <a href="https://tugofwartyperacer.lmhscodingclub.com">Tug of War Typeracer</a>
        </h1>

        <p className={styles.description}>

        </p>
        <button className={styles.button} onClick={async () => { 
          const id = await createRace(); 
          router.push(`/races?id=${id}`); 
        }}>
          Create a Race
        </button>

        <Form>
          <Label>Add a text to the dealership</Label>
          <Input type="textarea" cols="100" rows="10" style={{resize: 'none'}} value={newText} onChange={e => setNewText(e.target.value)} />
          <Button color="primary" className="mt-3" onClick={e => addText(newText).then(msg => {
            setTextSubmissionAlert(true);
            setNewText("");
          })}>Submit Text</Button>

        </Form>
        <Alert isOpen={textSubmissionAlert}>Text submitted successfully! Toodloo!</Alert>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://www.convex.dev/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/convex.svg" alt="Convex Logo" width={90} height={18} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
